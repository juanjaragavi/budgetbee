docs(quiz): improve markdown formatting in navigation guard documentation

Minor documentation improvements to QUIZ_NAVIGATION_GUARD.md for better
readability and markdown standards compliance.

Changes:
- Removed trailing colons from markdown headings (e.g., "Key Functions:" → "Key Functions")
- Changed code block language from generic to "markdown" for example flows
- Improved consistency across heading styles throughout document

Files changed:
- lib/documents/QUIZ_NAVIGATION_GUARD.md

This commit only affects documentation formatting with no code changes.


- Appends preserved params to redirect URLs

SessionStorage Flags:
- budgetbee_recommender_accessed: Boolean flag indicating recommender visit
- budgetbee_quiz_completed: ISO timestamp of quiz completion
- Isolated per browser tab/window (desired behavior)
- Cleared on browser close (allows fresh quiz in new session)

Files Created:
- src/lib/utils/quizNavigationGuard.ts (core utility, 200+ lines)
- src/components/quiz/QuizAccessGuard.tsx (React guard component)
- src/lib/recommenderPageGuard.ts (alternative implementation)
- lib/documents/QUIZ_NAVIGATION_GUARD.md (comprehensive documentation)

Files Modified:
- src/pages/quiz.astro (added QuizAccessGuard component)
- src/pages/credit-card-recommender-p1.astro (added guard script)
- src/pages/credit-card-recommender-p2.astro (added guard script)
- src/pages/credit-card-recommender-p3.astro (added guard script)

User Flow:
1. User visits /quiz (optionally with UTM params)
2. Completes quiz → redirected to external recommender link
3. User navigates to BudgetBee recommender pages
4. Guard installed, recommender_accessed flag set in sessionStorage
5. Any attempt to access /quiz → blocked and redirected to recommender
6. UTM parameters preserved through all redirects

Edge Cases Handled:
- Direct URL access to /quiz after completion: Blocked via guardQuizAccess()
- Browser refresh on recommender page: Guard persists via sessionStorage
- Back button navigation: Blocked via popstate event listener
- Astro view transitions: Blocked via astro:before-preparation listener
- New tab/window: sessionStorage isolated (allows separate flows)
- Browser close/reopen: sessionStorage cleared (fresh session)

Testing Checklist:
✅ Complete quiz and verify redirect
✅ Press back button → verify blocked from quiz
✅ Type /quiz in URL bar → verify redirect to recommender
✅ Refresh recommender page → verify guard persists
✅ Test with UTM parameters → verify preservation
✅ Check browser console for [QuizGuard] log messages
✅ Test in Chrome, Firefox, Safari
✅ Test on mobile devices (iOS Safari, Chrome Mobile)

Browser Console Messages:
[QuizGuard] Recommender page accessed, quiz navigation blocked
[QuizGuard] History guard installed on recommender page
[QuizGuard] Quiz access blocked - redirecting to recommender
[QuizGuard] Back navigation to quiz blocked

Impact:
✅ Quiz re-entry completely blocked after recommender access
✅ UTM parameter integrity maintained across all navigation attempts
✅ Analytics data accuracy preserved
✅ Duplicate form submissions prevented
✅ User flow integrity maintained
✅ Zero performance impact (client-side only)
✅ Cross-browser compatible
✅ Mobile-friendly

Performance & Security:
- Zero network requests (all client-side logic)
- sessionStorage: Fast, synchronous, isolated per tab
- No sensitive data stored
- No external dependencies
- Compatible with all modern browsers
- Works with Astro SSR and view transitions

Related Components:
- src/components/quiz/CreditCardForm.jsx
- src/pages/api/quiz-submission.ts
- src/lib/utils/utmUtils.ts
- src/components/analytics/UtmPersister.tsx
