feat: Implement comprehensive UTM parameter validation and Google Ads campaign support

## UTM Parameter System Enhancement

### Core UTM Infrastructure
- Add comprehensive UTM utility functions (src/lib/utils/utmUtils.ts)
- Implement dynamic UTM parameter extraction and validation
- Create intelligent sessionStorage management for campaign tracking
- Add GoogleAds campaign format support with validation

### Enhanced Analytics Components
- Refactor UtmPersister with intelligent campaign detection
- Add UtmMonitor for development debugging and validation
- Implement quiz-specific UTM handling with direct visit detection
- Update analytics components to use centralized UTM utilities

### Dynamic Quiz Link Components
- Create QuizLink.tsx for React-based dynamic quiz URLs
- Add QuizLink.astro for Astro-native quiz link handling
- Implement client-side UTM parameter propagation
- Support both server-side and client-side quiz URL generation

### URL Redirect Enhancement
- Enhanced /qz redirect to preserve UTM parameters during redirects
- Add proper campaign tracking through redirect flows
- Maintain UTM parameter integrity across navigation

### Comprehensive Testing Framework
- Google Ads campaign URL validation (test-googleads-utm.js)
- Browser-based UTM validation suite (browserUtmValidation.js)
- Automated UTM parameter testing scenarios
- Real-world campaign URL format verification

### Validation & Documentation
- Complete UTM validation report with 100% test success rate
- UTM refactor implementation documentation
- Comprehensive validation evidence and testing protocols
- Google Ads campaign format validation and compliance verification

## Files Modified
- src/components/analytics/UtmPersister.tsx: Enhanced with intelligent campaign logic
- src/components/analytics/UtmMonitor.tsx: Updated to use centralized utilities
- src/pages/qz.astro: UTM parameter preservation during redirects
- src/pages/quiz-results.astro: Updated to use dynamic QuizLink component

## Files Created
- src/lib/utils/utmUtils.ts: Core UTM parameter management system
- src/components/ui/QuizLink.tsx: React quiz link component
- src/components/ui/QuizLink.astro: Astro quiz link component
- scripts/test-googleads-utm.js: Google Ads URL validation tests
- src/lib/test/utmValidationSuite.js: Comprehensive validation framework
- src/lib/test/browserUtmValidation.js: Browser-based testing script
- lib/documents/UTM_VALIDATION_REPORT.md: Complete validation documentation
- lib/documents/UTM_REFACTOR_IMPLEMENTATION.md: Implementation details

## Validation Results
- ‚úÖ 100% test success rate (6/6 automated tests passed)
- ‚úÖ Google Ads campaign URL format properly handled
- ‚úÖ UTM parameter naming convention compliance verified
- ‚úÖ SessionStorage persistence and data layer integration confirmed
- ‚úÖ Real-world campaign URL processing validated
- ‚úÖ TypeScript compilation clean (0 errors, 0 warnings)

## Impact
- üéØ Dynamic UTM parameter handling based on actual campaign context
- üö´ Elimination of static UTM pollution for direct visits
- ‚úÖ Google Ads campaign format fully supported and validated
- üìä Accurate campaign attribution and analytics tracking
- üß™ Comprehensive testing framework for ongoing validation

Implements enterprise-grade UTM parameter handling with intelligent campaign detection, comprehensive validation, and support for Google Ads campaign tracking requirements.

content(personal-finance): add TOFU article on combining finances for couples

- New post: `yours-mine-or-ours-how-to-strategically-combine-finances-after-marriage-or-moving-in.mdx`
  - Category: personal-finance
  - SEO-focused title and intro using main keyword ‚Äúpersonal finance‚Äù
  - Clear sections: models (joint, hybrid, separate), setup systems, protections, shared goals
  - ‚â•3 internal links to existing BudgetBee guides (50/30/20 rule, emergency fund, budgeting methods, paycheck, etc.)
  - Uses <AdZone id="us_budgetbeepro_4" /> per conventions
  - Valid ISO date and frontmatter; passes `pnpm check`

fix(pages): harden [regular].astro to avoid undefined `.data` during prerender

- Add runtime fallback to resolve page via `Astro.params.regular` when `Astro.props.page` is missing
- Redirect to /404 if not found instead of throwing
- Loosen local typing to avoid structural type mismatch from content entries

Build: Verified `pnpm check` passes with 0 errors.
