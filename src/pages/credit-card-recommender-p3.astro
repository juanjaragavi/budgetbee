---
import Base from "@/layouts/Base.astro";
import { Image } from "astro:assets";

const cards = [
  {
    name: "Amazon Rewards Visa",
    url: "/financial-solutions/amazon-rewards-visa-credit-card-benefits",
    reqUrl: "/financial-solutions/amazon-rewards-visa-credit-card-requirements",
  },
  {
    name: "Capital One Savor Rewards",
    url: "/financial-solutions/capital-one-savor-rewards-credit-card-benefits",
    reqUrl:
      "/financial-solutions/capital-one-savor-rewards-credit-card-requirements",
  },
  {
    name: "Chase Freedom Unlimited",
    url: "/financial-solutions/chase-freedom-unlimited-credit-card-benefits",
    reqUrl: "/financial-solutions/chase-freedom-unlimited-requirements",
  },
];

const randomCard = cards[Math.floor(Math.random() * cards.length)];
---

<Base
  title="Your Credit Card Recommendation is Ready | BudgetBee"
  meta_title="Credit Card Recommender - Scroll to Discover | BudgetBee"
  description="Scroll down to reveal the credit card that best fits your profile. Your personalized recommendation is just a scroll away."
  image="/images/og-image.png"
>
  <section class="section pb-0" style="min-height: 150vh;">
    <div class="container">
      <div class="row justify-center">
        <div class="lg:col-10 text-center">
          <div class="content">
            <h1 class="h2 mb-4">Scroll Down to Reveal Your Card</h1>
            <p class="text-lg text-dark mb-6">
              Your personalized credit card recommendation is ready. Keep
              scrolling to see which card we've selected for you.
            </p>
            <div class="my-8 animate-bounce">
              <svg
                class="mx-auto h-8 w-8 text-primary"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      id="recommendation-container"
      class="invisible opacity-0 transition-opacity duration-1000"
    >
      <div class="container pt-12">
        <div class="row justify-center">
          <div class="lg:col-10 text-center">
            <h2 class="h3 mb-4">We recommend the {randomCard.name}</h2>
            <div
              class="flex flex-col sm:flex-row justify-center items-center gap-4"
            >
              <a
                href={randomCard.url}
                class="btn btn-secondary w-full sm:w-auto"
                style="background-color: #4A90E2; border-color: #4A90E2; color: white;"
                >View Benefits</a
              >
              <a
                href={randomCard.reqUrl}
                class="btn btn-primary w-full sm:w-auto"
                style="background-color: #7ED321; border-color: #7ED321; color: white;"
                >View Requirements</a
              >
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const recommendationContainer = document.getElementById(
      "recommendation-container"
    );
    let hasBeenRevealed = false;

    const revealOnScroll = () => {
      if (hasBeenRevealed || !recommendationContainer) return;

      const scrollPosition = window.scrollY;
      const triggerPosition = window.innerHeight * 0.5; // Reveal at 50% of viewport height

      if (scrollPosition > triggerPosition) {
        recommendationContainer.classList.remove("invisible");
        recommendationContainer.classList.add("visible");
        recommendationContainer.style.opacity = "1";
        hasBeenRevealed = true;
        window.removeEventListener("scroll", revealOnScroll);
      }
    };

    if (recommendationContainer) {
      window.addEventListener("scroll", revealOnScroll);
    }
  });
</script>

<style>
  .btn {
    transition: all 0.3s ease;
  }

  .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .invisible {
    visibility: hidden;
  }

  .visible {
    visibility: visible;
  }
</style>
