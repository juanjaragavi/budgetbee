---
import { getCollection } from "astro:content";
import Base from "@/layouts/Base.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import Post from "@/layouts/partials/Post.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import config from "@/config/config.json";

const { pagination } = config.settings;

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const allCategories = await getTaxonomy("blog", "categories");

  return allCategories.flatMap((category) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.categories?.includes(category)
    );
    const sortedPosts = sortByDate(filteredPosts);
    const totalPages = Math.ceil(sortedPosts.length / pagination);

    return Array.from({ length: totalPages }, (_, i) => ({
      params: {
        category,
        slug: (i + 1).toString(),
      },
      props: {
        posts: sortedPosts,
        category,
        totalPosts: sortedPosts.length,
        currentPage: i + 1,
        totalPages,
      },
    }));
  });
}

const { category, slug } = Astro.params;
const { posts, totalPosts, currentPage, totalPages } = Astro.props;

// Calculate pagination
const indexOfLastPost = currentPage * pagination;
const indexOfFirstPost = indexOfLastPost - pagination;
const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);

// Category metadata for better SEO and UX
const categoryMeta: Record<
  string,
  { title: string; description: string; type: string }
> = {
  "personal-finance": {
    title: "Personal Finance",
    description:
      "Educational articles about personal finance fundamentals, budgeting basics, and financial literacy to help you build a solid financial foundation.",
    type: "TOFU",
  },
  "budgeting-basics": {
    title: "Budgeting Basics",
    description:
      "Learn the fundamentals of budgeting with practical guides, methods, and tools to take control of your finances.",
    type: "TOFU",
  },
  "financial-literacy": {
    title: "Financial Literacy",
    description:
      "Build your financial knowledge with educational content covering essential money concepts and financial principles.",
    type: "TOFU",
  },
  "money-management": {
    title: "Money Management",
    description:
      "Practical tips and strategies for effective money management and building healthy financial habits.",
    type: "TOFU",
  },
  "financial-planning": {
    title: "Financial Planning",
    description:
      "Long-term financial planning guides to help you set and achieve your financial goals at every life stage.",
    type: "TOFU",
  },
  "financial-solutions": {
    title: "Financial Solutions",
    description:
      "Solution-oriented content and product recommendations to help you make informed financial decisions.",
    type: "MOFU",
  },
  "credit-cards": {
    title: "Credit Cards",
    description:
      "Credit card reviews, comparisons, and guidance to help you choose the best credit card for your needs.",
    type: "MOFU",
  },
  "personal-loans": {
    title: "Personal Loans",
    description:
      "Personal loan guides, comparisons, and qualification tips to help you find the best loan options.",
    type: "MOFU",
  },
  "banking-products": {
    title: "Banking Products",
    description:
      "Bank account reviews and recommendations to help you choose the best banking solutions.",
    type: "MOFU",
  },
  "investment-products": {
    title: "Investment Products",
    description:
      "Investment platform reviews and guides to help you start your investment journey with confidence.",
    type: "MOFU",
  },
  reviews: {
    title: "Reviews",
    description:
      "In-depth reviews of financial products and services to help you make informed decisions.",
    type: "Supporting",
  },
  comparisons: {
    title: "Comparisons",
    description:
      "Side-by-side comparisons of financial products and services to help you choose the best option.",
    type: "Supporting",
  },
  guides: {
    title: "Guides",
    description:
      "Comprehensive step-by-step guides covering various financial topics and processes.",
    type: "Supporting",
  },
  tools: {
    title: "Tools",
    description:
      "Financial tools, calculators, and resources to help you manage your money more effectively.",
    type: "Supporting",
  },
};

const currentCategoryMeta = categoryMeta[category] || {
  title:
    category.charAt(0).toUpperCase() + category.slice(1).replace(/-/g, " "),
  description: `Articles about ${category.replace(/-/g, " ")}`,
  type: "General",
};

const pageTitle = `${currentCategoryMeta.title} - Page ${currentPage} - BudgetBee Blog`;
const metaDescription = `${currentCategoryMeta.description} - Page ${currentPage} of ${totalPages}`;
---

<Base
  title={pageTitle}
  meta_title={pageTitle}
  description={metaDescription}
  image="/images/og-image.png"
>
  <section class="section">
    <div class="container">
      <!-- Category Header -->
      <div class="row justify-center">
        <div class="lg:col-10">
          <div class="content">
            <div class="mb-8 text-center">
              <h1 class="h2 mb-4">{currentCategoryMeta.title}</h1>
              <p class="text-lg text-gray-600 mb-4">
                {currentCategoryMeta.description}
              </p>

              <!-- Category Type Badge -->
              <div class="flex justify-center">
                <span
                  class={`inline-block px-3 py-1 text-sm font-medium rounded-full ${
                    currentCategoryMeta.type === "TOFU"
                      ? "bg-blue-100 text-blue-800"
                      : currentCategoryMeta.type === "MOFU"
                        ? "bg-green-100 text-green-800"
                        : "bg-gray-100 text-gray-800"
                  }`}
                >
                  {
                    currentCategoryMeta.type === "TOFU"
                      ? "üìö Educational Content"
                      : currentCategoryMeta.type === "MOFU"
                        ? "üí∞ Solution Content"
                        : "üîç Resource Content"
                  }
                </span>
              </div>

              <!-- Page Info -->
              <p class="text-sm text-gray-500 mt-4">
                Page {currentPage} of {totalPages} ‚Ä¢ {totalPosts} total {
                  totalPosts === 1 ? "article" : "articles"
                }
              </p>
            </div>

            <!-- Breadcrumb Navigation -->
            <nav class="mb-8" aria-label="Breadcrumb">
              <ol class="flex items-center space-x-2 text-sm text-gray-500">
                <li><a href="/" class="hover:text-primary">Home</a></li>
                <li class="flex items-center">
                  <svg
                    class="w-4 h-4 mx-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"></path>
                  </svg>
                  <a href="/blog" class="hover:text-primary">Blog</a>
                </li>
                <li class="flex items-center">
                  <svg
                    class="w-4 h-4 mx-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"></path>
                  </svg>
                  <a
                    href={`/blog/category/${category}`}
                    class="hover:text-primary">{currentCategoryMeta.title}</a
                  >
                </li>
                {
                  currentPage > 1 && (
                    <li class="flex items-center">
                      <svg
                        class="w-4 h-4 mx-2"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                          clip-rule="evenodd"
                        />
                      </svg>
                      <span class="text-gray-900 font-medium">
                        Page {currentPage}
                      </span>
                    </li>
                  )
                }
              </ol>
            </nav>
          </div>
        </div>
      </div>

      <!-- Blog Posts -->
      <div class="row">
        <div class="mx-auto lg:col-10">
          <div class="row mt-10">
            {
              currentPosts.map((post: any) => (
                <div class="mb-12 md:col-6">
                  <Post post={post} />
                </div>
              ))
            }
          </div>

          <!-- Pagination -->
          {
            totalPages > 1 && (
              <Pagination
                section="blog"
                currentPage={currentPage}
                totalPages={totalPages}
                base={`/blog/category/${category}`}
              />
            )
          }
        </div>
      </div>
    </div>
  </section>
</Base>
