---
import { markdownify } from "@/lib/utils/textConverter";
import { render } from "astro:content";
import { AIContentDisclaimerStatic } from "@/components/ui/ai-content-disclaimer";

const { post } = Astro.props;
const { Content } = await render(post);
const { title, image, categories, color } = post.data;

const applyLeadingTight =
  categories.includes("Personal Finance") ||
  categories.includes("Financial Solutions");
const isFinancialSolution = categories.includes("Financial Solutions");
---
{
  isFinancialSolution && (
    <style>
      .content ul > li::before {
        background-color: var(--product-color) !important;
      }
      .content > a:not(.btn),
      .content p > a:not(.btn) {
        color: var(--product-color) !important;
        text-decoration: none;
      }
      .content > a:not(.btn):hover,
      .content p > a:not(.btn):hover {
        text-decoration: underline;
      }

      /* Ensure content stays left-aligned with ad units present */
      .blog-post-single .content,
      .blog-post-single .content *:not(.ad-zone):not(.mobile-ad-separator) {
        text-align: left !important;
      }

      /* Prevent ad zone flex properties from affecting content */
      .blog-content-wrapper > *:not(.ad-zone) {
        text-align: left !important;
      }
    </style>
  )
}

<section class="section">
  <div class="container">
    <div class="row justify-center">
      <div class="col-12 lg:col-10 xl:col-8">
        <article
          class="blog-post-single"
          style={isFinancialSolution ? `--product-color: ${color};` : ""}
        >
          {
            image && (
              <div class="mb-6 overflow-hidden rounded-lg">
                <img
                  src={image}
                  height="500"
                  width="1000"
                  alt={title}
                  class="w-full h-auto object-cover"
                />
              </div>
            )
          }
          <h1
            set:html={markdownify(title)}
            class:list={[
              "h2 text-left my-4 md:my-6",
              { "leading-tight": applyLeadingTight },
            ]}
          />

          {/* Autozep Ad: us_budgetbeepro_3 - Insert after title and first paragraph */}
          {isFinancialSolution && (
            <div
              id="us_budgetbeepro_3"
              class="min-size-auto flex justify-center items-center"
            >
            </div>
          )}

          <div
            class:list={[
              "content mb-16 text-left",
              { "leading-tight": applyLeadingTight },
            ]}
            style="text-align: left !important;"
          >
            <div class="blog-content-wrapper" style="text-align: left !important;">
              <Content />
            </div>

            {/* Autozep Ad: us_budgetbeepro_4 - Will be repositioned by script */}
            {isFinancialSolution && (
              <div
              id="us_budgetbeepro_4"
              class="min-size-auto flex justify-center items-center"
            >
            </div>
            )}

            <AIContentDisclaimerStatic client:load />
          </div>
        </article>
      </div>
    </div>
  </div>
</section>

{/* Script to reposition the second ad unit before the last section */}
{isFinancialSolution && (
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Wait a bit for content to be fully rendered
      setTimeout(function() {
        const adContainer = document.getElementById('mob-4-container');
        const contentWrapper = document.querySelector('.blog-content-wrapper');

        if (adContainer && contentWrapper) {
          // Look for the last section heading (h3) that typically contains conclusion or CTA content
          const headings = contentWrapper.querySelectorAll('h3');
          let targetHeading = null;

          // Find the last heading that might be a conclusion section
          for (let i = headings.length - 1; i >= 0; i--) {
            const headingText = headings[i].textContent?.toLowerCase() || '';
            if (headingText.includes('explore') || headingText.includes('other') ||
                headingText.includes('solutions') || headingText.includes('maximize') ||
                headingText.includes('benefits') || headingText.includes('financial') ||
                i === headings.length - 1) {
              targetHeading = headings[i];
              break;
            }
          }

          // Fallback: if no specific heading found, use the last h3
          if (!targetHeading && headings.length > 0) {
            targetHeading = headings[headings.length - 1];
          }

          // Move the ad container before the target heading
          if (targetHeading && targetHeading.parentNode) {
            targetHeading.parentNode.insertBefore(adContainer, targetHeading);
          }
        }
      }, 100);
    });
  </script>
)}
